// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tessenger.Server.Data;

#nullable disable

namespace Tessenger.Server.Migrations
{
    [DbContext(typeof(TessengerServerContext))]
    [Migration("20250423032122_mssql.local_migration_181")]
    partial class mssqllocal_migration_181
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tessenger.Server.Models.Education_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("degree");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("End_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_date");

                    b.Property<string>("School_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("school_name");

                    b.Property<string>("Start_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.ToTable("Education_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Friend_Request_Send_Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("Send_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("send_time");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Friend_Request_Send_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Group_Account_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.PrimitiveCollection<string>("Admin_Usernames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("admin_usernames");

                    b.PrimitiveCollection<string>("Members_Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("members_username");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Group_Account_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Group_Information_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("Group_Creation_Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("group_creation_date");

                    b.Property<string>("Group_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("group_description");

                    b.Property<bool>("Group_Isactive")
                        .HasColumnType("bit")
                        .HasColumnName("group_isactive");

                    b.Property<bool>("Group_Isarchived")
                        .HasColumnType("bit")
                        .HasColumnName("group_isarchived");

                    b.Property<bool>("Group_Isblocked")
                        .HasColumnType("bit")
                        .HasColumnName("group_isblocked");

                    b.Property<bool>("Group_Isdeleted")
                        .HasColumnType("bit")
                        .HasColumnName("group_isdeleted");

                    b.Property<bool>("Group_Isdeletedbyadmin")
                        .HasColumnType("bit")
                        .HasColumnName("group_isdeletedbyadmin");

                    b.Property<bool>("Group_Isdeletedbybot")
                        .HasColumnType("bit")
                        .HasColumnName("group_isdeletedbybot");

                    b.Property<bool>("Group_Isdeletedbyother")
                        .HasColumnType("bit")
                        .HasColumnName("group_isdeletedbyother");

                    b.Property<bool>("Group_Isdeletedbyowner")
                        .HasColumnType("bit")
                        .HasColumnName("group_isdeletedbyowner");

                    b.Property<bool>("Group_Isdeletedbyuser")
                        .HasColumnType("bit")
                        .HasColumnName("group_isdeletedbyuser");

                    b.Property<bool>("Group_Ismuted")
                        .HasColumnType("bit")
                        .HasColumnName("group_ismuted");

                    b.Property<bool>("Group_Isprivate")
                        .HasColumnType("bit")
                        .HasColumnName("group_isprivate");

                    b.Property<bool>("Group_Isreported")
                        .HasColumnType("bit")
                        .HasColumnName("group_isreported");

                    b.Property<DateTime>("Group_Last_Activity")
                        .HasColumnType("datetime2")
                        .HasColumnName("group_last_activity");

                    b.Property<string>("Group_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("group_name");

                    b.Property<string>("Group_Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("group_picture");

                    b.Property<string>("Owner_Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Owner_username");

                    b.HasKey("Id");

                    b.ToTable("Group_Information_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Social_Media_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("Date_Added")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_added");

                    b.Property<string>("Social_Media_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("social_media_description");

                    b.Property<string>("Social_Media_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("social_media_link");

                    b.Property<string>("Social_Media_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("social_media_name");

                    b.HasKey("Id");

                    b.ToTable("Social_Media_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.User_Account_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("User_Account_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.User_Account_Settings_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Accessibility_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("accessibility_settings");

                    b.Property<string>("Account_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_settings");

                    b.Property<string>("App_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("app_settings");

                    b.Property<string>("Appearance_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("appearance_settings");

                    b.Property<string>("Backup_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("backup_settings");

                    b.Property<string>("Customization_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customization_settings");

                    b.Property<string>("Data_Backup_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_backup_settings");

                    b.Property<string>("Data_Deletion_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_deletion_settings");

                    b.Property<string>("Data_Encryption_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_encryption_settings");

                    b.Property<string>("Data_Export_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_export_settings");

                    b.Property<string>("Data_Import_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_import_settings");

                    b.Property<string>("Data_Restore_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_restore_settings");

                    b.Property<string>("Data_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_settings");

                    b.Property<string>("Data_Sharing_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_sharing_settings");

                    b.Property<string>("Data_Storage_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_storage_settings");

                    b.Property<string>("Data_Sync_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_sync_settings");

                    b.Property<string>("Data_Usage_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_usage_settings");

                    b.Property<string>("Device_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_settings");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("language");

                    b.Property<string>("Location_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location_settings");

                    b.Property<string>("Notification_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_settings");

                    b.Property<string>("Privacy_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("privacy_settings");

                    b.Property<string>("Security_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("security_settings");

                    b.Property<string>("Sync_Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sync_settings");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("theme");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("User_Account_Settings_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.User_Information_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Authentation_Authenticator_App")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationauthenticatorapp");

                    b.Property<string>("Authentation_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationemail");

                    b.Property<string>("Authentation_Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationphonenumber");

                    b.Property<string>("Authentation_Security_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationsecuritykey");

                    b.Property<string>("Authentation_Security_Questions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationsecurityquestions");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bio");

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.PrimitiveCollection<string>("Educations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("educations");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("full_name");

                    b.Property<bool>("Isactive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("Middle_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("middle_name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Profile_Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("religion");

                    b.PrimitiveCollection<string>("Social_Medias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("social_medias");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.PrimitiveCollection<string>("WebSites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("websites");

                    b.HasKey("Id");

                    b.ToTable("User_Information_Model");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Website_Model", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("Date_Added")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("Website_Model");
                });
#pragma warning restore 612, 618
        }
    }
}
